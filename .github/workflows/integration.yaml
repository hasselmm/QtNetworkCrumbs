name: Continuous Integration
on: [push]

jobs:
  build:
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false

      matrix:
        os: [macos-12, ubuntu-22.04, windows-2022]
        target: [desktop]
        tools: ['']
        arch: ['']

        include:
          - os: macos-12
            target: ios
            cmake-flags: [
                '-DCMAKE_FIND_ROOT_PATH:PATH=$Qt5_DIR',
                '-DCMAKE_PREFIX_PATH:STRING=$Qt5_DIR',
                '-DCMAKE_SYSTEM_NAME:STRING=iOS',
                '-GXcode',
            ]

          - os: ubuntu-22.04
            target: android
            cmake-flags: [
                '-DCMAKE_SYSTEM_NAME:STRING=Android',
                '-DCMAKE_SYSTEM_VERSION:STRING=21',
                '-DCMAKE_ANDROID_ARCH_ABI:STRING=armeabi-v7a',
                '-DCMAKE_ANDROID_STL:STRING=c++_shared',
                '-DCMAKE_ANDROID_SDK:PATH=$ANDROID_SDK_ROOT',
                '-DCMAKE_ANDROID_NDK:PATH=$ANDROID_NDK_ROOT',
                '-DCMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/ninja',
                '-DCMAKE_FIND_ROOT_PATH:PATH=$Qt5_DIR',
                '-DCMAKE_PREFIX_PATH:STRING=$Qt5_DIR',
                '-DANDROID_ABI:STRING=armeabi-v7a',
                '-GNinja',
            ]

          - os: windows-2022
            target: desktop
            arch: win64_mingw81
            cmake-flags: [
              '-DCMAKE_C_COMPILER:FILEPATH=$env:IQTA_TOOLS/mingw1120_64/bin/gcc.exe',
              '-DCMAKE_CXX_COMPILER:FILEPATH=$env:IQTA_TOOLS/mingw1120_64/bin/g++.exe',
              '-DCMAKE_MAKE_PROGRAM:FILEPATH=$env:IQTA_TOOLS/Ninja/ninja.exe',
              '-GNinja',
            ]
            tools: 'tools_mingw90 tools_ninja'

    steps:
      - uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          tools: ${{matrix.tools}}
          cache: true

      - name: Install build tools
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install ninja-build

      - name: Prepare
        run: |
          cmake -E make_directory ${{runner.workspace}}/build
          cmake -E environment

      - name: Configure
        working-directory: ${{runner.workspace}}/build
        run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE:STRING=Release ${{join(matrix.cmake-flags, ' ')}}

      - uses: actions/upload-artifact@v3
        with:
          name: cmake-${{matrix.os}}-${{matrix.target}}-${{matrix.arch || 'default'}}
          path: |
            ${{runner.workspace}}/build/CMakeCache.txt
            ${{runner.workspace}}/build/CMakeFiles/CMakeOutput.log

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config Release

      - name: Test
        if: matrix.target == 'desktop'
        working-directory: ${{runner.workspace}}/build
        run: |
          ctest -C Release --output-on-failure

      - uses: actions/upload-artifact@v3
        if: matrix.target == 'desktop'
        with:
          name: ctest-${{matrix.os}}-${{matrix.target}}-${{matrix.arch || 'default'}}
          path: |
            ${{runner.workspace}}/build/Testing/Temporary/LastTest.log
